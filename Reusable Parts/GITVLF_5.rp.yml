Reusable Part:
  Name:               GITVLFONE_OSYSTM
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "\\OC=VLF-ONE Imbedded Interface Point"

  - FRA:
      Description:        "VLF-ONE Imbedded Interface Point"

  Source: |
    <-
    
    * ----------------------------------------------------------------------------------------------------------
    *
    *   ########  ##       ########    ###     ######  ########       ##    ##  #######  ######## ########
    *   ##     ## ##       ##         ## ##   ##    ## ##             ###   ## ##     ##    ##    ##
    *   ##     ## ##       ##        ##   ##  ##       ##             ####  ## ##     ##    ##    ##
    *   ########  ##       ######   ##     ##  ######  ######         ## ## ## ##     ##    ##    ######
    *   ##        ##       ##       #########       ## ##             ##  #### ##     ##    ##    ##
    *   ##        ##       ##       ##     ## ##    ## ##             ##   ### ##     ##    ##    ##
    *   ##        ######## ######## ##     ##  ######  ########       ##    ##  #######     ##    ########
    *
    *  This components DF_ or UF_ name prefix means it is a shipped demonstration or user example component.
    *  You must not use it in your production applications because it will change in future VLF versions.
    *  Instead, copy this code into your own VL object, which is not prefixed VF_, DF_ or UF_, and use that.
    *
    *  Never use UF_OSYSTM in end-user applications.
    *
    *  Aspects of the behaviour of this component are assumed by the rest of the
    *  VLF-ONE. If you make any modifications to the events, methods, properties,
    *  structure or execution path or other characteristics of this component in any
    *  way that is not documented you are risking future application failures.
    *
    *  If you change this component and recompile it, then future VLF updates will
    *  overrwrite both your source code and compiled object, losing your changes.
    *  To avoid this:
    *
    *    -> Create a new resuable component with some unique name, say, MYOSYSTM.
    *
    *    -> Copy the shipped UF_OSYSTM code into MYOSYSTM.
    *
    *    -> Check MYOSYSTM has ancestor class VF_AC011O by starting with BEGIN_COM ROLE(*EXTENDS #VF_AC011O)
    *
    *    -> Compile MYOSYSTM.
    *
    *    -> Modify the definition of your framework's VLF-ONE User Imbedded Interface Point name
    *       in the framework details tabsheet to MYOSYSTM, rather than the shipped name UF_OSYSTM.
    *
    * --------------------------------------------------------------------------------------------------------
    
    Begin_Com Role(*EXTENDS #VF_AC011O)
    
    * -----------------------------------------------------------------------------
    * Initialization
    Mthroutine Name(uInitialize) Options(*REDEFINE)
    
    * Do any ancestor logic
    #COM_ANCESTOR.uInitialize
    
    * Do custom logic
    #MaximumOpenFilterandHandlerPanes := 10
    #MaxiumQuickSearchSize := 200
    #SharedMessageSetinTabletMode := True /* Use a single shared message set in tablet mode */
    
    * Only allow a restart button on small or medium size devices
    #AVFRAMEWORKMANAGER.avShowRestartButton := (#AVFRAMEWORKMANAGER.avLargeScreen.Not)
    
    Endroutine
    
    * -----------------------------------------------------------------------------
    * Termination
    Mthroutine Name(uTerminate) Options(*REDEFINE)
    
    * Custom logic ...........
    
    
    
    * Do any ancestor logic
    #COM_ANCESTOR.uTerminate
    
    Endroutine
    * -----------------------------------------------------------------------------
    * Start the Main window
    Mthroutine Name(avMAINWindowReady) Options(*REDEFINE)
    
    * Continue with execution
    #Continue := True
    
    Endroutine
    
    * -------------------------------------------------------------------------------------
    * Close the MAIN window
    Mthroutine Name(avCloseMAINWindow) Options(*REDEFINE)
    
    * Clean up and deallocate resources
    
    
    * Continue to close (NOTE: returning false is only viable if #PossibletoCancel=true)
    #Continue := True
    
    Endroutine
    
    End_Com
